/**
 * Facebook Firefox Toolbar Software License
 * Copyright (c) 2007-2009 Facebook, Inc.
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (which, together with any graphical images included with such
 * software, are collectively referred to below as the "Software") to (a) use,
 * reproduce, display, distribute, execute, and transmit the Software, (b)
 * prepare derivative works of the Software (excluding any graphical images
 * included with the Software, which may not be modified or altered), and (c)
 * permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * Facebook, Inc. retains ownership of the Software and all associated
 * intellectual property rights.  All rights not expressly granted in this
 * license are reserved by Facebook, Inc.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

var _src   = window.arguments[0],
    _label = window.arguments[1],
    _url   = window.arguments[2],
    _count = window.arguments[3];
var _winService = Cc["@mozilla.org/appshell/window-mediator;1"].getService(Ci.nsIWindowMediator),
    _prefService = Cc['@mozilla.org/preferences-service;1'].getService(Ci.nsIPrefBranch);

function NotifierLoad() {
    debug('NotifierLoad', _label, _url);
    document.getElementById('pic').setAttribute('src', _src );
    document.getElementById('label').appendChild(document.createTextNode(_label));
    window.setTimeout('window.close();', 10000);
    window.addEventListener('mouseup', NotifierClick, false);
}
function NotifierClick() {
    debug('NotifierClick', _label, _url );
    window.close();

    if (_url) { // open
        var win = _winService.getMostRecentWindow( "navigator:browser" );
        var browser = win ? win.getBrowser() : null;
        if( browser
          && 2 != _prefService.getIntPref('browser.link.open_newwindow') )
          // 1 => current Firefox window;
          // 2 => new window;
          // 3 => a new tab in the current window;
        { // open in a focused tab
          var tab = browser.addTab(_url);
          browser.selectedTab = tab;
          win.content.focus();
        }
        else {
          window.open(_url);
        }
    }
}
function NotifierUnload() {
    debug('NotifierUnload', _label);
    if( _count )
      _count.value--;
}
// For some reason window.onload doesn't seem to get triggered if we are
// opening mulitple windows at a time.  Need to use DOMContentLoaded instead.
document.addEventListener("DOMContentLoaded", NotifierLoad, false);
window.addEventListener('unload', NotifierUnload, false);
debug('loaded notifier.js', window.arguments.length);
